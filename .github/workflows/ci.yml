name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    timeout-minutes: 20
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node_version: [14, 16, 18]
        include:
          # Active LTS + other OS
          - os: macos-latest
            node_version: 16
          - os: windows-latest
            node_version: 16
      fail-fast: false

    name: 'Build&Test: node-${{ matrix.node_version }}, ${{ matrix.os }}'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.1.7

      - name: Set node version to ${{ matrix.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
          cache: 'pnpm'

      - name: Install deps
        run: pnpm install

      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Build
        run: pnpm run build

      - name: Test unit
        run: pnpm run test-unit
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2

      - name: Test e2e
        run: pnpm run test-e2e
        
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
        with:
          args: >
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info

  lint:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    name: 'Lint: node-16, ubuntu-latest'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.1.7

      - name: Set node version to 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'pnpm'

      - name: Install deps
        run: pnpm install

      - name: Build
        run: pnpm run build

      - name: Lint
        run: pnpm run lint

      - name: Check formatting
        run: pnpm prettier --check .
